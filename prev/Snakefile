import os
import pandas as pd

configfile: "config.yaml"

''' Load from config '''
LABEL = config['LABEL']
READS1 = config['READS1']
READS2 = config['READS2']
ALN_MAPQ_THRSD = config['ALN_MAPQ_THRSD']
DIR = config['DIR']
GENOME = config['GENOME']
DIR_SECONDPASS_GENOMES = config['DIR_SECONDPASS_GENOMES']
SECONDPASS_GENOMES = config['SECONDPASS_GENOMES']
BCFTOOLS = config['BCFTOOLS']
# LIFTOVER = config['LIFTOVER']
PYTHON = config['PYTHON']
DIR_SCRIPTS = config['DIR_SCRIPTS']
# TIME = config['TIME']
THREADS = config['THREADS']
RAND_SEED = config['RAND_SEED']

MAJOR_IDX = config['MAJOR_IDX']
''''''

BT2_IDX_EXT = ['.1', '.2', '.3', '.4', '.rev.1', '.rev.2']

GENOME_BASENAME_NOEXT = os.path.splitext(os.path.basename(GENOME))[0]
GENOME_IDX_PREFIX = os.path.join(DIR, 'data/bt2_indexes/' + GENOME_BASENAME_NOEXT)
DIR_SECONDPASS_GENOME_IDX = os.path.join(DIR, 'data/bt2_indexes/')

DIR_FIRST_PASS = os.path.join(DIR, 'alignments/' + LABEL)

''' Included rules '''
# Index genomes
#   check: 'index.done'
include: 'shared/index.Snakefile'
# Align reads
#   check: 'align.done'
include: 'shared/align.Snakefile'

rule all:
    input:
        index = os.path.join(DIR, 'index.done'),
        align = os.path.join(DIR, 'align.done')
    run:
        sys.stderr.write('Reference flow run is finished.\n')

rule filter_phased_vcf:
    input:
        vcf = PHASED_VCF,
        chrom_map = CHROM_MAP
    output:
        vcf = PHASED_VCF_F
    shell:
        '{BCFTOOLS} view -V mnps,other -c 1 -f PASS -O v {input.vcf} | {BCFTOOLS} norm -d all | {BCFTOOLS} annotate --rename-chrs {input.chrom_map} -o {output.vcf}'

rule build_onekg_major:
    input:
        genome = GENOME,
        vcf = PHASED_VCF_F,
        chrom_map = CHROM_MAP
        # chrom_map = os.path.join(DIR, 'GRCh38.chrom_map')
    output:
        # chrom_map = os.path.join(DIR_MAJOR, 'chr{}.chrom_map'.format(CHROM)),
        vcf_major = PREFIX_MAJOR_F + '-1kg.vcf',
        out_genome = PREFIX_MAJOR + '-1kg.fa',
        out_var = PREFIX_MAJOR + '-1kg.var',
        out_vcf = PREFIX_MAJOR + '-1kg.vcf'
    params:
        AN = DICT_GNOMAD_POP_SIZE['all'],
        OP = PREFIX_MAJOR + '-1kg'
    shell:
        #: The 1KG hg38 call set uses chrN instead of N for chrom names
        #: so take additional steps to convert it
        # 'echo "{CHROM} chr{CHROM}" > {output.chrom_map};'
        '{BCFTOOLS} view -O v -q 0.5 {input.vcf} -e \'AF = 0.5\' '
        '-v snps,indels -m2 -M2 | {BCFTOOLS} annotate --rename-chrs {input.chrom_map}'
        '> {output.vcf_major};'
        #: if no need to convert chrom name
        # '{BCFTOOLS} view -O v -q 0.5 {input.vcf} -e \'AF = 0.5\''
        # ' -v snps,indels -m2 -M2 '
        # '> {output.vcf_major};'
        '{PYTHON} {DIR_SCRIPTS}/update_genome.py '
        '    --ref {input.genome} --vcf {output.vcf_major} '
        '    --chrom {CHROM} --out-prefix {params.OP} '
        '    --include-indels'

rule build_onekg_major_index:
    input:
        major = PREFIX_MAJOR + '-1kg.fa'
    output:
        PREFIX_MAJOR_IDX + '-1kg.1.bt2',
        PREFIX_MAJOR_IDX + '-1kg.2.bt2',
        PREFIX_MAJOR_IDX + '-1kg.3.bt2',
        PREFIX_MAJOR_IDX + '-1kg.4.bt2',
        PREFIX_MAJOR_IDX + '-1kg.rev.1.bt2',
        PREFIX_MAJOR_IDX + '-1kg.rev.2.bt2'
    threads: THREADS
    params:
        PREFIX_MAJOR_IDX + '-1kg'
    shell:
        'bowtie2-build --threads {threads} {input.major} {params}'
